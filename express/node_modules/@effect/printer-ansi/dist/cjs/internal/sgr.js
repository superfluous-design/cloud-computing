"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toEscapeSequence = exports.toCode = exports.setUnderlined = exports.setStrikethrough = exports.setItalicized = exports.setColor = exports.setBold = exports.reset = void 0;
var color = _interopRequireWildcard(require("./color.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
// -----------------------------------------------------------------------------
// Constructors
// -----------------------------------------------------------------------------
/** @internal */
const reset = exports.reset = {
  _tag: "Reset"
};
/** @internal */
const setBold = bold => ({
  _tag: "SetBold",
  bold
});
/** @internal */
exports.setBold = setBold;
const setColor = (color, vivid, layer) => ({
  _tag: "SetColor",
  color,
  vivid,
  layer
});
/** @internal */
exports.setColor = setColor;
const setItalicized = italicized => ({
  _tag: "SetItalicized",
  italicized
});
/** @internal */
exports.setItalicized = setItalicized;
const setStrikethrough = strikethrough => ({
  _tag: "SetStrikethrough",
  strikethrough
});
/** @internal */
exports.setStrikethrough = setStrikethrough;
const setUnderlined = underlined => ({
  _tag: "SetUnderlined",
  underlined
});
// -----------------------------------------------------------------------------
// Destructors
// -----------------------------------------------------------------------------
/** @internal */
exports.setUnderlined = setUnderlined;
const toCode = self => {
  switch (self._tag) {
    case "Reset":
      {
        return 0;
      }
    case "SetBold":
      {
        return self.bold ? 1 : 22;
      }
    case "SetColor":
      {
        switch (self.layer) {
          case "foreground":
            {
              return self.vivid ? 90 + color.toCode(self.color) : 30 + color.toCode(self.color);
            }
          case "background":
            {
              return self.vivid ? 100 + color.toCode(self.color) : 40 + color.toCode(self.color);
            }
        }
      }
    case "SetItalicized":
      {
        return self.italicized ? 3 : 23;
      }
    case "SetStrikethrough":
      {
        return self.strikethrough ? 9 : 29;
      }
    case "SetUnderlined":
      {
        return self.underlined ? 4 : 24;
      }
  }
};
/** @internal */
exports.toCode = toCode;
const toEscapeSequence = sgrs => csi("m", sgrs);
exports.toEscapeSequence = toEscapeSequence;
const csi = (controlFunction, sgrs) => {
  const params = Array.from(sgrs).map(sgr => `${toCode(sgr)}`).join(";");
  return `\u001b[${params}${controlFunction}`;
};
//# sourceMappingURL=sgr.js.map