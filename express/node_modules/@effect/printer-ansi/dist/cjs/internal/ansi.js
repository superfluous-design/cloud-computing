"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.yellowBright = exports.yellow = exports.whiteBright = exports.white = exports.underlined = exports.stringify = exports.strikethrough = exports.redBright = exports.red = exports.none = exports.magentaBright = exports.magenta = exports.italicized = exports.greenBright = exports.green = exports.eraseUp = exports.eraseStartLine = exports.eraseScreen = exports.eraseLines = exports.eraseLine = exports.eraseEndLine = exports.eraseDown = exports.cyanBright = exports.cyan = exports.cursorUp = exports.cursorTo = exports.cursorShow = exports.cursorSavePosition = exports.cursorRestorePosition = exports.cursorPrevLine = exports.cursorNextLine = exports.cursorMove = exports.cursorLeft = exports.cursorHide = exports.cursorForward = exports.cursorDown = exports.cursorBackward = exports.combine = exports.color = exports.brightColor = exports.bold = exports.blueBright = exports.blue = exports.blackBright = exports.black = exports.bgYellowBright = exports.bgYellow = exports.bgWhiteBright = exports.bgWhite = exports.bgRedBright = exports.bgRed = exports.bgMagentaBright = exports.bgMagenta = exports.bgGreenBright = exports.bgGreen = exports.bgCyanBright = exports.bgCyan = exports.bgColorBright = exports.bgColor = exports.bgBlueBright = exports.bgBlue = exports.bgBlackBright = exports.bgBlack = exports.beep = exports.AnsiTypeId = void 0;
var Monoid = _interopRequireWildcard(require("@effect/typeclass/Monoid"));
var Semigroup = _interopRequireWildcard(require("@effect/typeclass/Semigroup"));
var Arr = _interopRequireWildcard(require("effect/Array"));
var _Function = require("effect/Function");
var Option = _interopRequireWildcard(require("effect/Option"));
var InternalColor = _interopRequireWildcard(require("./color.js"));
var SGR = _interopRequireWildcard(require("./sgr.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const AnsiSymbolKey = "@effect/printer-ansi/Ansi";
/** @internal */
const AnsiTypeId = exports.AnsiTypeId = /*#__PURE__*/Symbol.for(AnsiSymbolKey);
const make = params => ({
  ...AnsiMonoid.empty,
  ...params
});
// -----------------------------------------------------------------------------
// Instances
// -----------------------------------------------------------------------------
const typeIdSemigroup = /*#__PURE__*/Semigroup.first();
const getFirstSomeSemigroup = /*#__PURE__*/Semigroup.make((self, that) => Option.isSome(self) ? self : that);
const AnsiSemigroup = /*#__PURE__*/Semigroup.struct({
  [AnsiTypeId]: typeIdSemigroup,
  commands: /*#__PURE__*/Semigroup.array(),
  foreground: getFirstSomeSemigroup,
  background: getFirstSomeSemigroup,
  bold: getFirstSomeSemigroup,
  italicized: getFirstSomeSemigroup,
  strikethrough: getFirstSomeSemigroup,
  underlined: getFirstSomeSemigroup
});
const typeIdMonoid = /*#__PURE__*/Monoid.fromSemigroup(typeIdSemigroup, AnsiTypeId);
const monoidOrElse = /*#__PURE__*/Monoid.fromSemigroup(getFirstSomeSemigroup, /*#__PURE__*/Option.none());
const AnsiMonoid = /*#__PURE__*/Monoid.struct({
  [AnsiTypeId]: typeIdMonoid,
  commands: /*#__PURE__*/Monoid.array(),
  foreground: monoidOrElse,
  background: monoidOrElse,
  bold: monoidOrElse,
  italicized: monoidOrElse,
  strikethrough: monoidOrElse,
  underlined: monoidOrElse
});
/** @internal */
const none = exports.none = AnsiMonoid.empty;
const ESC = "\u001B[";
const BEL = "\u0007";
const SEP = ";";
// -----------------------------------------------------------------------------
// Styles
// -----------------------------------------------------------------------------
/** @internal */
const bold = exports.bold = /*#__PURE__*/make({
  bold: /*#__PURE__*/Option.some(/*#__PURE__*/SGR.setBold(true))
});
/** @internal */
const italicized = exports.italicized = /*#__PURE__*/make({
  italicized: /*#__PURE__*/Option.some(/*#__PURE__*/SGR.setItalicized(true))
});
/** @internal */
const strikethrough = exports.strikethrough = /*#__PURE__*/make({
  strikethrough: /*#__PURE__*/Option.some(/*#__PURE__*/SGR.setStrikethrough(true))
});
/** @internal */
const underlined = exports.underlined = /*#__PURE__*/make({
  underlined: /*#__PURE__*/Option.some(/*#__PURE__*/SGR.setUnderlined(true))
});
// -----------------------------------------------------------------------------
// Colors
// -----------------------------------------------------------------------------
/** @internal */
const brightColor = color => make({
  foreground: Option.some(SGR.setColor(color, true, "foreground"))
});
/** @internal */
exports.brightColor = brightColor;
const color = color => make({
  foreground: Option.some(SGR.setColor(color, false, "foreground"))
});
/** @internal */
exports.color = color;
const bgColorBright = color => make({
  background: Option.some(SGR.setColor(color, true, "background"))
});
/** @internal */
exports.bgColorBright = bgColorBright;
const bgColor = color => make({
  background: Option.some(SGR.setColor(color, false, "background"))
});
/** @internal */
exports.bgColor = bgColor;
const black = exports.black = /*#__PURE__*/color(InternalColor.black);
/** @internal */
const red = exports.red = /*#__PURE__*/color(InternalColor.red);
/** @internal */
const green = exports.green = /*#__PURE__*/color(InternalColor.green);
/** @internal */
const yellow = exports.yellow = /*#__PURE__*/color(InternalColor.yellow);
/** @internal */
const blue = exports.blue = /*#__PURE__*/color(InternalColor.blue);
/** @internal */
const magenta = exports.magenta = /*#__PURE__*/color(InternalColor.magenta);
/** @internal */
const cyan = exports.cyan = /*#__PURE__*/color(InternalColor.cyan);
/** @internal */
const white = exports.white = /*#__PURE__*/color(InternalColor.white);
/** @internal */
const blackBright = exports.blackBright = /*#__PURE__*/brightColor(InternalColor.black);
/** @internal */
const redBright = exports.redBright = /*#__PURE__*/brightColor(InternalColor.red);
/** @internal */
const greenBright = exports.greenBright = /*#__PURE__*/brightColor(InternalColor.green);
/** @internal */
const yellowBright = exports.yellowBright = /*#__PURE__*/brightColor(InternalColor.yellow);
/** @internal */
const blueBright = exports.blueBright = /*#__PURE__*/brightColor(InternalColor.blue);
/** @internal */
const magentaBright = exports.magentaBright = /*#__PURE__*/brightColor(InternalColor.magenta);
/** @internal */
const cyanBright = exports.cyanBright = /*#__PURE__*/brightColor(InternalColor.cyan);
/** @internal */
const whiteBright = exports.whiteBright = /*#__PURE__*/brightColor(InternalColor.white);
/** @internal */
const bgBlack = exports.bgBlack = /*#__PURE__*/bgColor(InternalColor.black);
/** @internal */
const bgRed = exports.bgRed = /*#__PURE__*/bgColor(InternalColor.red);
/** @internal */
const bgGreen = exports.bgGreen = /*#__PURE__*/bgColor(InternalColor.green);
/** @internal */
const bgYellow = exports.bgYellow = /*#__PURE__*/bgColor(InternalColor.yellow);
/** @internal */
const bgBlue = exports.bgBlue = /*#__PURE__*/bgColor(InternalColor.blue);
/** @internal */
const bgMagenta = exports.bgMagenta = /*#__PURE__*/bgColor(InternalColor.magenta);
/** @internal */
const bgCyan = exports.bgCyan = /*#__PURE__*/bgColor(InternalColor.cyan);
/** @internal */
const bgWhite = exports.bgWhite = /*#__PURE__*/bgColor(InternalColor.white);
/** @internal */
const bgBlackBright = exports.bgBlackBright = /*#__PURE__*/bgColorBright(InternalColor.black);
/** @internal */
const bgRedBright = exports.bgRedBright = /*#__PURE__*/bgColorBright(InternalColor.red);
/** @internal */
const bgGreenBright = exports.bgGreenBright = /*#__PURE__*/bgColorBright(InternalColor.green);
/** @internal */
const bgYellowBright = exports.bgYellowBright = /*#__PURE__*/bgColorBright(InternalColor.yellow);
/** @internal */
const bgBlueBright = exports.bgBlueBright = /*#__PURE__*/bgColorBright(InternalColor.blue);
/** @internal */
const bgMagentaBright = exports.bgMagentaBright = /*#__PURE__*/bgColorBright(InternalColor.magenta);
/** @internal */
const bgCyanBright = exports.bgCyanBright = /*#__PURE__*/bgColorBright(InternalColor.cyan);
/** @internal */
const bgWhiteBright = exports.bgWhiteBright = /*#__PURE__*/bgColorBright(InternalColor.white);
// -----------------------------------------------------------------------------
// Commands
// -----------------------------------------------------------------------------
/** @internal */
const beep = exports.beep = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(BEL)
});
/** @internal */
const cursorTo = (column, row) => {
  if (row === undefined) {
    const command = `${ESC}${Math.max(column + 1, 0)}G`;
    return make({
      commands: Arr.of(command)
    });
  }
  const command = `${ESC}${row + 1}${SEP}${Math.max(column + 1, 0)}H`;
  return make({
    commands: Arr.of(command)
  });
};
/** @internal */
exports.cursorTo = cursorTo;
const cursorMove = (column, row = 0) => {
  let command = "";
  if (row < 0) {
    command += `${ESC}${-row}A`;
  }
  if (row > 0) {
    command += `${ESC}${row}B`;
  }
  if (column > 0) {
    command += `${ESC}${column}C`;
  }
  if (column < 0) {
    command += `${ESC}${-column}D`;
  }
  return make({
    commands: Arr.of(command)
  });
};
/** @internal */
exports.cursorMove = cursorMove;
const cursorUp = (lines = 1) => {
  const command = `${ESC}${lines}A`;
  return make({
    commands: Arr.of(command)
  });
};
/** @internal */
exports.cursorUp = cursorUp;
const cursorDown = (lines = 1) => {
  const command = `${ESC}${lines}B`;
  return make({
    commands: Arr.of(command)
  });
};
/** @internal */
exports.cursorDown = cursorDown;
const cursorForward = (columns = 1) => {
  const command = `${ESC}${columns}C`;
  return make({
    commands: Arr.of(command)
  });
};
/** @internal */
exports.cursorForward = cursorForward;
const cursorBackward = (columns = 1) => {
  const command = `${ESC}${columns}D`;
  return make({
    commands: Arr.of(command)
  });
};
/** @internal */
exports.cursorBackward = cursorBackward;
const cursorLeft = exports.cursorLeft = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}G`)
});
/** @internal */
const cursorSavePosition = exports.cursorSavePosition = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}s`)
});
/** @internal */
const cursorRestorePosition = exports.cursorRestorePosition = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}u`)
});
/** @internal */
const cursorNextLine = (rows = 1) => make({
  commands: Arr.of(`${ESC}${rows}E`)
});
/** @internal */
exports.cursorNextLine = cursorNextLine;
const cursorPrevLine = (rows = 1) => make({
  commands: Arr.of(`${ESC}${rows}F`)
});
/** @internal */
exports.cursorPrevLine = cursorPrevLine;
const cursorHide = exports.cursorHide = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}?25l`)
});
/** @internal */
const cursorShow = exports.cursorShow = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}?25h`)
});
/** @internal */
const eraseLines = rows => {
  let command = "";
  for (let i = 0; i < rows; i++) {
    command += `${ESC}2K` + (i < rows - 1 ? `${ESC}1A` : "");
  }
  if (rows > 0) {
    command += `${ESC}G`;
  }
  return make({
    commands: Arr.of(command)
  });
};
/** @internal */
exports.eraseLines = eraseLines;
const eraseEndLine = exports.eraseEndLine = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}K`)
});
/** @internal */
const eraseStartLine = exports.eraseStartLine = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}1K`)
});
/** @internal */
const eraseLine = exports.eraseLine = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}2K`)
});
/** @internal */
const eraseDown = exports.eraseDown = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}J`)
});
/** @internal */
const eraseUp = exports.eraseUp = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}1J`)
});
/** @internal */
const eraseScreen = exports.eraseScreen = /*#__PURE__*/make({
  commands: /*#__PURE__*/Arr.of(`${ESC}2J`)
});
// -----------------------------------------------------------------------------
// Destructors
// -----------------------------------------------------------------------------
/** @internal */
const stringify = self => stringifyInternal(self);
// -----------------------------------------------------------------------------
// Combinators
// -----------------------------------------------------------------------------
/** @internal */
exports.stringify = stringify;
const combine = exports.combine = /*#__PURE__*/(0, _Function.dual)(2, (self, that) => combineInternal(self, that));
// -----------------------------------------------------------------------------
// Internal
// -----------------------------------------------------------------------------
const combineInternal = (self, that) => AnsiSemigroup.combine(self, that);
const stringifyInternal = self => {
  const displaySequence = SGR.toEscapeSequence(Arr.getSomes([Option.some(SGR.reset), self.foreground, self.background, self.bold, self.italicized, self.strikethrough, self.underlined]));
  const commandSequence = Arr.join(self.commands, "");
  return `${displaySequence}${commandSequence}`;
};
//# sourceMappingURL=ansi.js.map