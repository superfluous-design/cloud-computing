"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.make = exports.layer = exports.TypeId = exports.ErrorTypeId = exports.ClipboardError = exports.Clipboard = void 0;
var _Error = require("@effect/platform/Error");
var Context = _interopRequireWildcard(require("effect/Context"));
var Effect = _interopRequireWildcard(require("effect/Effect"));
var Layer = _interopRequireWildcard(require("effect/Layer"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/**
 * @since 1.0.0
 */

/**
 * @since 1.0.0
 * @category type ids
 */
const TypeId = exports.TypeId = /*#__PURE__*/Symbol.for("@effect/platform-browser/Clipboard");
/**
 * @since 1.0.0
 * @category type ids
 */
const ErrorTypeId = exports.ErrorTypeId = /*#__PURE__*/Symbol.for("@effect/platform-browser/Clipboard/ClipboardError");
/**
 * @since 1.0.0
 * @category errors
 */
class ClipboardError extends /*#__PURE__*/(0, _Error.TypeIdError)(ErrorTypeId, "ClipboardError") {}
/**
 * @since 1.0.0
 * @category tag
 */
exports.ClipboardError = ClipboardError;
const Clipboard = exports.Clipboard = /*#__PURE__*/Context.GenericTag("@effect/platform-browser/Clipboard");
/**
 * @since 1.0.0
 * @category constructor
 */
const make = impl => Clipboard.of({
  ...impl,
  [TypeId]: TypeId,
  clear: impl.writeString(""),
  writeBlob: blob => impl.write([new ClipboardItem({
    [blob.type]: blob
  })])
});
/**
 * A layer that directly interfaces with the navigator.clipboard api
 *
 * @since 1.0.0
 * @category layers
 */
exports.make = make;
const layer = exports.layer = /*#__PURE__*/Layer.succeed(Clipboard, /*#__PURE__*/make({
  read: /*#__PURE__*/Effect.tryPromise({
    try: () => navigator.clipboard.read(),
    catch: cause => new ClipboardError({
      cause,
      "message": "Unable to read from clipboard"
    })
  }),
  write: s => Effect.tryPromise({
    try: () => navigator.clipboard.write(s),
    catch: cause => new ClipboardError({
      cause,
      "message": "Unable to write to clipboard"
    })
  }),
  readString: /*#__PURE__*/Effect.tryPromise({
    try: () => navigator.clipboard.readText(),
    catch: cause => new ClipboardError({
      cause,
      "message": "Unable to read a string from clipboard"
    })
  }),
  writeString: text => Effect.tryPromise({
    try: () => navigator.clipboard.writeText(text),
    catch: cause => new ClipboardError({
      cause,
      "message": "Unable to write a string to clipboard"
    })
  })
}));
//# sourceMappingURL=Clipboard.js.map