"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.watchPosition = exports.layer = exports.TypeId = exports.GeolocationError = exports.Geolocation = exports.ErrorTypeId = void 0;
var _Error = require("@effect/platform/Error");
var Context = _interopRequireWildcard(require("effect/Context"));
var Effect = _interopRequireWildcard(require("effect/Effect"));
var Either = _interopRequireWildcard(require("effect/Either"));
var _Function = require("effect/Function");
var Layer = _interopRequireWildcard(require("effect/Layer"));
var Queue = _interopRequireWildcard(require("effect/Queue"));
var Stream = _interopRequireWildcard(require("effect/Stream"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/**
 * @since 1.0.0
 */

/**
 * @since 1.0.0
 * @category type ids
 */
const TypeId = exports.TypeId = /*#__PURE__*/Symbol.for("@effect/platform-browser/Geolocation");
/**
 * @since 1.0.0
 * @category tags
 */
const Geolocation = exports.Geolocation = /*#__PURE__*/Context.GenericTag("@effect/platform-browser/Geolocation");
/**
 * @since 1.0.0
 * @category type ids
 */
const ErrorTypeId = exports.ErrorTypeId = /*#__PURE__*/Symbol.for("@effect/platform-browser/Geolocation/GeolocationError");
/**
 * @since 1.0.0
 * @category errors
 */
class GeolocationError extends /*#__PURE__*/(0, _Error.TypeIdError)(ErrorTypeId, "GeolocationError") {
  get message() {
    return this.reason;
  }
}
exports.GeolocationError = GeolocationError;
const makeQueue = options => Queue.sliding(options?.bufferSize ?? 16).pipe(Effect.tap(queue => Effect.acquireRelease(Effect.sync(() => navigator.geolocation.watchPosition(position => queue.unsafeOffer(Either.right(position)), cause => {
  if (cause.code === cause.PERMISSION_DENIED) {
    queue.unsafeOffer(Either.left(new GeolocationError({
      reason: "PermissionDenied",
      cause
    })));
  } else if (cause.code === cause.TIMEOUT) {
    queue.unsafeOffer(Either.left(new GeolocationError({
      reason: "Timeout",
      cause
    })));
  }
}, options)), handleId => Effect.sync(() => navigator.geolocation.clearWatch(handleId)))));
/**
 * @since 1.0.0
 * @category layers
 */
const layer = exports.layer = /*#__PURE__*/Layer.succeed(Geolocation, /*#__PURE__*/Geolocation.of({
  [TypeId]: TypeId,
  getCurrentPosition: options => makeQueue(options).pipe(Effect.flatMap(Queue.take), Effect.flatten, Effect.scoped),
  watchPosition: options => makeQueue(options).pipe(Effect.map(Stream.fromQueue), Stream.unwrapScoped, Stream.mapEffect(_Function.identity))
}));
/**
 * @since 1.0.0
 * @category accessors
 */
const watchPosition = options => Stream.unwrap(Effect.map(Geolocation, geolocation => geolocation.watchPosition(options)));
exports.watchPosition = watchPosition;
//# sourceMappingURL=Geolocation.js.map