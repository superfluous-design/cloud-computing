/**
 * @since 1.0.0
 */
import type * as HttpClient from "@effect/platform/HttpClient";
import * as Context from "effect/Context";
import type { Effect } from "effect/Effect";
import type * as FiberRef from "effect/FiberRef";
import type { LazyArg } from "effect/Function";
import type * as Layer from "effect/Layer";
/**
 * @since 1.0.0
 * @category layers
 */
export declare const layerXMLHttpRequest: Layer.Layer<HttpClient.HttpClient>;
declare const XMLHttpRequest_base: Context.TagClass<XMLHttpRequest, "@effect/platform-browser/BrowserHttpClient/XMLHttpRequest", LazyArg<globalThis.XMLHttpRequest>>;
/**
 * @since 1.0.0
 * @category tags
 */
export declare class XMLHttpRequest extends XMLHttpRequest_base {
}
/**
 * @since 1.0.0
 * @category fiber refs
 */
export declare const currentXHRResponseType: FiberRef.FiberRef<"text" | "arraybuffer">;
/**
 * @since 1.0.0
 * @category fiber refs
 */
export declare const withXHRArrayBuffer: <A, E, R>(effect: Effect<A, E, R>) => Effect<A, E, R>;
export {};
//# sourceMappingURL=BrowserHttpClient.d.ts.map