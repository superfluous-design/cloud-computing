/**
 * @since 1.0.0
 */
import type * as Stream from "effect/Stream";
/**
 * Creates a `Stream` from window.addEventListener.
 * @since 1.0.0
 */
export declare const fromEventListenerWindow: <K extends keyof WindowEventMap>(type: K, options?: boolean | {
    readonly capture?: boolean;
    readonly passive?: boolean;
    readonly once?: boolean;
    readonly bufferSize?: number | "unbounded" | undefined;
} | undefined) => Stream.Stream<WindowEventMap[K], never, never>;
/**
 * Creates a `Stream` from document.addEventListener.
 * @since 1.0.0
 */
export declare const fromEventListenerDocument: <K extends keyof DocumentEventMap>(type: K, options?: boolean | {
    readonly capture?: boolean;
    readonly passive?: boolean;
    readonly once?: boolean;
    readonly bufferSize?: number | "unbounded" | undefined;
} | undefined) => Stream.Stream<DocumentEventMap[K], never, never>;
//# sourceMappingURL=BrowserStream.d.ts.map