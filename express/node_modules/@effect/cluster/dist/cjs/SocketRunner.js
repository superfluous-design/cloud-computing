"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.layerClientOnly = exports.layer = void 0;
var _SocketServer = require("@effect/platform/SocketServer");
var RpcServer = _interopRequireWildcard(require("@effect/rpc/RpcServer"));
var Effect = _interopRequireWildcard(require("effect/Effect"));
var Layer = _interopRequireWildcard(require("effect/Layer"));
var RunnerServer = _interopRequireWildcard(require("./RunnerServer.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/**
 * @since 1.0.0
 */

const withLogAddress = layer => Layer.effectDiscard(Effect.gen(function* () {
  const server = yield* _SocketServer.SocketServer;
  const address = server.address._tag === "UnixAddress" ? server.address.path : `${server.address.hostname}:${server.address.port}`;
  yield* Effect.annotateLogs(Effect.logInfo(`Listening on: ${address}`), {
    package: "@effect/cluster",
    service: "Runner"
  });
})).pipe(Layer.provideMerge(layer));
/**
 * @since 1.0.0
 * @category Layers
 */
const layer = exports.layer = /*#__PURE__*/RunnerServer.layerWithClients.pipe(withLogAddress, /*#__PURE__*/Layer.provide(RpcServer.layerProtocolSocketServer));
/**
 * @since 1.0.0
 * @category Layers
 */
const layerClientOnly = exports.layerClientOnly = RunnerServer.layerClientOnly;
//# sourceMappingURL=SocketRunner.js.map