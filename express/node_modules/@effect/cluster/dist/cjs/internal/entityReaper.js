"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EntityReaper = void 0;
var Effect = _interopRequireWildcard(require("effect/Effect"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/** @internal */
class EntityReaper extends /*#__PURE__*/Effect.Service()("@effect/cluster/EntityReaper", {
  scoped: /*#__PURE__*/Effect.gen(function* () {
    let currentResolution = 30_000;
    const registered = [];
    const latch = yield* Effect.makeLatch();
    const register = options => Effect.suspend(() => {
      currentResolution = Math.max(Math.min(currentResolution, options.maxIdleTime), 5000);
      registered.push(options);
      return latch.open;
    });
    const clock = yield* Effect.clock;
    yield* Effect.gen(function* () {
      while (true) {
        yield* Effect.sleep(currentResolution);
        const now = clock.unsafeCurrentTimeMillis();
        for (const {
          entities,
          maxIdleTime,
          servers
        } of registered) {
          for (const state of servers.values()) {
            const duration = now - state.lastActiveCheck;
            if (state.activeRequests.size > 0 || duration < maxIdleTime) {
              continue;
            }
            yield* Effect.fork(entities.removeIgnore(state.address));
          }
        }
      }
    }).pipe(latch.whenOpen, Effect.interruptible, Effect.forkScoped);
    return {
      register
    };
  })
}) {}
exports.EntityReaper = EntityReaper;
//# sourceMappingURL=entityReaper.js.map