/**
 * @since 0.24.0
 */
import * as readonlyArray from "effect/Array";
import { dual, identity } from "effect/Function";
import * as covariant from "../Covariant.js";
const of = identity;
const map = /*#__PURE__*/dual(2, (self, f) => f(self));
const imap = /*#__PURE__*/covariant.imap(map);
const flatMap = /*#__PURE__*/dual(2, (self, f) => f(self));
const product = (self, that) => [self, that];
const productMany = (self, collection) => [self, ...collection];
const traverse = F => dual(2, (self, f) => f(self));
/**
 * @category instances
 * @since 0.24.0
 */
export const Covariant = {
  imap,
  map
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Invariant = {
  imap
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Of = {
  of
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Pointed = {
  of,
  imap,
  map
};
/**
 * @category instances
 * @since 0.24.0
 */
export const FlatMap = {
  flatMap
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Chainable = {
  imap,
  map,
  flatMap
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Monad = {
  imap,
  of,
  map,
  flatMap
};
/**
 * @category instances
 * @since 0.24.0
 */
export const SemiProduct = {
  imap,
  product,
  productMany
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Product = {
  of,
  imap,
  product,
  productMany,
  productAll: readonlyArray.fromIterable
};
/**
 * @category instances
 * @since 0.24.0
 */
export const SemiApplicative = {
  imap,
  map,
  product,
  productMany
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Applicative = {
  imap,
  of,
  map,
  product,
  productMany,
  productAll: readonlyArray.fromIterable
};
/**
 * @category instances
 * @since 0.24.0
 */
export const getSemiCoproduct = S => ({
  imap,
  coproduct: dual(2, S.combine),
  coproductMany: dual(2, S.combineMany)
});
/**
 * @category instances
 * @since 0.24.0
 */
export const getSemiAlternative = S => ({
  ...getSemiCoproduct(S),
  map
});
/**
 * @category instances
 * @since 0.24.0
 */
export const Foldable = {
  reduce: /*#__PURE__*/dual(3, (self, b, f) => f(b, self))
};
/**
 * @category instances
 * @since 0.24.0
 */
export const Traversable = {
  traverse
};
//# sourceMappingURL=Identity.js.map