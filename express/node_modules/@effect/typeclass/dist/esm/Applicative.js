import * as monoid from "./Monoid.js";
import * as semiApplicative from "./SemiApplicative.js";
/**
 * Lift a `Monoid` into `F`, combining the inner values using the provided `Monoid`:
 *
 * - `combine` is provided by {@link semiApplicative.getSemigroup}.
 * - `empty` is `F.of(M.empty)`
 *
 * @since 0.24.0
 */
export const getMonoid = F => M => monoid.fromSemigroup(semiApplicative.getSemigroup(F)(M), F.of(M.empty));
//# sourceMappingURL=Applicative.js.map