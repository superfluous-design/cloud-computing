/**
 * @since 0.24.0
 */
import * as monoid from "../Monoid.js";
import * as semigroup from "../Semigroup.js";
/**
 * `bigint` semigroup under addition.
 *
 * **Example**
 *
 * ```ts
 * import { SemigroupSum } from "@effect/typeclass/data/BigInt"
 *
 * console.log(SemigroupSum.combine(2n, 3n))
 * // 5n
 * ```
 *
 * @category instances
 * @since 0.24.0
 */
export declare const SemigroupSum: semigroup.Semigroup<bigint>;
/**
 * `bigint` semigroup under multiplication.
 *
 * @category instances
 * @since 0.24.0
 */
export declare const SemigroupMultiply: semigroup.Semigroup<bigint>;
/**
 * A `Semigroup` that uses the minimum between two values.
 *
 * **Example**
 *
 * ```ts
 * import { SemigroupMin } from "@effect/typeclass/data/BigInt"
 *
 * console.log(SemigroupMin.combine(2n, 3n))
 * // 2n
 * ```
 *
 * @category instances
 * @since 0.24.0
 */
export declare const SemigroupMin: semigroup.Semigroup<bigint>;
/**
 * A `Semigroup` that uses the maximum between two values.
 *
 * **Example**
 *
 * ```ts
 * import { SemigroupMax } from "@effect/typeclass/data/BigInt"
 *
 * console.log(SemigroupMax.combine(2n, 3n))
 * // 3n
 * ```
 *
 * @category instances
 * @since 0.24.0
 */
export declare const SemigroupMax: semigroup.Semigroup<bigint>;
/**
 * `bigint` monoid under addition.
 *
 * The `empty` value is `0n`.
 *
 * **Example**
 *
 * ```ts
 * import { MonoidSum } from "@effect/typeclass/data/BigInt"
 *
 * console.log(MonoidSum.combine(2n, 3n))
 * // 5n
 * console.log(MonoidSum.combine(2n, MonoidSum.empty))
 * // 2n
 * ```
 *
 * @category instances
 * @since 0.24.0
 */
export declare const MonoidSum: monoid.Monoid<bigint>;
/**
 * `bigint` monoid under multiplication.
 *
 * The `empty` value is `1n`.
 *
 * **Example**
 *
 * ```ts
 * import { MonoidMultiply } from "@effect/typeclass/data/BigInt"
 *
 * console.log(MonoidMultiply.combine(2n, 3n))
 * // 6n
 * console.log(MonoidMultiply.combine(2n, MonoidMultiply.empty))
 * // 2n
 * ```
 *
 * @category instances
 * @since 0.24.0
 */
export declare const MonoidMultiply: monoid.Monoid<bigint>;
//# sourceMappingURL=BigInt.d.ts.map