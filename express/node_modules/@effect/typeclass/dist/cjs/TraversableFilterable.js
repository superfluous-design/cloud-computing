"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.traversePartitionMap = exports.traversePartition = exports.traverseFilterMap = exports.traverseFilter = void 0;
var E = _interopRequireWildcard(require("effect/Either"));
var _Function = require("effect/Function");
var O = _interopRequireWildcard(require("effect/Option"));
var filterable = _interopRequireWildcard(require("./Filterable.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/**
 * Returns a default binary `traversePartitionMap` implementation.
 *
 * @since 0.24.0
 */
const traversePartitionMap = T => F => (self, f) => F.map(T.traverse(F)(self, f), filterable.separate(T));
/**
 * Returns a default binary `traverseFilterMap` implementation.
 *
 * @since 0.24.0
 */
exports.traversePartitionMap = traversePartitionMap;
const traverseFilterMap = T => F => (self, f) => F.map(T.traverse(F)(self, f), filterable.compact(T));
/**
 * @since 0.24.0
 */
exports.traverseFilterMap = traverseFilterMap;
const traverseFilter = T => F => (0, _Function.dual)(2, (self, predicate) => T.traverseFilterMap(F)(self, b => F.map(predicate(b), keep => keep ? O.some(b) : O.none())));
/**
 * @since 0.24.0
 */
exports.traverseFilter = traverseFilter;
const traversePartition = T => F => (0, _Function.dual)(2, (self, predicate) => T.traversePartitionMap(F)(self, b => F.map(predicate(b), keep => keep ? E.right(b) : E.left(b))));
exports.traversePartition = traversePartition;
//# sourceMappingURL=TraversableFilterable.js.map