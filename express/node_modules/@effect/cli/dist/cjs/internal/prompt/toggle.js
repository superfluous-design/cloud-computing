"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toggle = void 0;
var Terminal = _interopRequireWildcard(require("@effect/platform/Terminal"));
var Ansi = _interopRequireWildcard(require("@effect/printer-ansi/Ansi"));
var Doc = _interopRequireWildcard(require("@effect/printer-ansi/AnsiDoc"));
var Optimize = _interopRequireWildcard(require("@effect/printer/Optimize"));
var Arr = _interopRequireWildcard(require("effect/Array"));
var Effect = _interopRequireWildcard(require("effect/Effect"));
var InternalPrompt = _interopRequireWildcard(require("../prompt.js"));
var _action = require("./action.js");
var InternalAnsiUtils = _interopRequireWildcard(require("./ansi-utils.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const renderBeep = /*#__PURE__*/Doc.render(Doc.beep, {
  style: "pretty"
});
function handleClear(options) {
  return Effect.gen(function* () {
    const terminal = yield* Terminal.Terminal;
    const columns = yield* terminal.columns;
    const clearPrompt = Doc.cat(Doc.eraseLine, Doc.cursorLeft);
    const clearOutput = InternalAnsiUtils.eraseText(options.message, columns);
    return clearOutput.pipe(Doc.cat(clearPrompt), Optimize.optimize(Optimize.Deep), Doc.render({
      style: "pretty",
      options: {
        lineWidth: columns
      }
    }));
  });
}
function renderToggle(value, options, submitted = false) {
  const separator = Doc.annotate(Doc.char("/"), Ansi.blackBright);
  const selectedAnnotation = Ansi.combine(Ansi.underlined, submitted ? Ansi.white : Ansi.cyanBright);
  const inactive = value ? Doc.text(options.inactive) : Doc.annotate(Doc.text(options.inactive), selectedAnnotation);
  const active = value ? Doc.annotate(Doc.text(options.active), selectedAnnotation) : Doc.text(options.active);
  return Doc.hsep([active, separator, inactive]);
}
function renderOutput(toggle, leadingSymbol, trailingSymbol, options) {
  const annotateLine = line => Doc.annotate(Doc.text(line), Ansi.bold);
  const promptLines = options.message.split(/\r?\n/);
  const prefix = Doc.cat(leadingSymbol, Doc.space);
  if (Arr.isNonEmptyReadonlyArray(promptLines)) {
    const lines = Arr.map(promptLines, line => annotateLine(line));
    return prefix.pipe(Doc.cat(Doc.nest(Doc.vsep(lines), 2)), Doc.cat(Doc.space), Doc.cat(trailingSymbol), Doc.cat(Doc.space), Doc.cat(toggle));
  }
  return Doc.hsep([prefix, trailingSymbol, toggle]);
}
function renderNextFrame(state, options) {
  return Effect.gen(function* () {
    const terminal = yield* Terminal.Terminal;
    const figures = yield* InternalAnsiUtils.figures;
    const columns = yield* terminal.columns;
    const leadingSymbol = Doc.annotate(Doc.text("?"), Ansi.cyanBright);
    const trailingSymbol = Doc.annotate(figures.pointerSmall, Ansi.blackBright);
    const toggle = renderToggle(state, options);
    const promptMsg = renderOutput(toggle, leadingSymbol, trailingSymbol, options);
    return Doc.cursorHide.pipe(Doc.cat(promptMsg), Optimize.optimize(Optimize.Deep), Doc.render({
      style: "pretty",
      options: {
        lineWidth: columns
      }
    }));
  });
}
function renderSubmission(value, options) {
  return Effect.gen(function* () {
    const terminal = yield* Terminal.Terminal;
    const figures = yield* InternalAnsiUtils.figures;
    const columns = yield* terminal.columns;
    const leadingSymbol = Doc.annotate(figures.tick, Ansi.green);
    const trailingSymbol = Doc.annotate(figures.ellipsis, Ansi.blackBright);
    const toggle = renderToggle(value, options, true);
    const promptMsg = renderOutput(toggle, leadingSymbol, trailingSymbol, options);
    return promptMsg.pipe(Doc.cat(Doc.hardLine), Optimize.optimize(Optimize.Deep), Doc.render({
      style: "pretty",
      options: {
        lineWidth: columns
      }
    }));
  });
}
const activate = /*#__PURE__*/Effect.succeed(/*#__PURE__*/_action.Action.NextFrame({
  state: true
}));
const deactivate = /*#__PURE__*/Effect.succeed(/*#__PURE__*/_action.Action.NextFrame({
  state: false
}));
function handleRender(options) {
  return (state, action) => {
    switch (action._tag) {
      case "Beep":
        {
          return Effect.succeed(renderBeep);
        }
      case "NextFrame":
        {
          return renderNextFrame(state, options);
        }
      case "Submit":
        {
          return renderSubmission(state, options);
        }
    }
  };
}
function handleProcess(input, state) {
  switch (input.key.name) {
    case "0":
    case "j":
    case "delete":
    case "right":
    case "down":
      {
        return deactivate;
      }
    case "1":
    case "k":
    case "left":
    case "up":
      {
        return activate;
      }
    case " ":
    case "tab":
      {
        return state ? deactivate : activate;
      }
    case "enter":
    case "return":
      {
        return Effect.succeed(_action.Action.Submit({
          value: state
        }));
      }
    default:
      {
        return Effect.succeed(_action.Action.Beep());
      }
  }
}
/** @internal */
const toggle = options => {
  const opts = {
    initial: false,
    active: "on",
    inactive: "off",
    ...options
  };
  return InternalPrompt.custom(opts.initial, {
    render: handleRender(opts),
    process: handleProcess,
    clear: () => handleClear(opts)
  });
};
exports.toggle = toggle;
//# sourceMappingURL=toggle.js.map