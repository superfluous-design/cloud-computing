/**
 * @since 1.0.0
 */
import type { Command } from "./CommandDescriptor.js";
import type { HelpDoc } from "./HelpDoc.js";
/**
 * @since 1.0.0
 * @category symbols
 */
export declare const ValidationErrorTypeId: unique symbol;
/**
 * @since 1.0.0
 * @category symbols
 */
export type ValidationErrorTypeId = typeof ValidationErrorTypeId;
/**
 * @since 1.0.0
 * @category models
 */
export type ValidationError = CommandMismatch | CorrectedFlag | HelpRequested | InvalidArgument | InvalidValue | MissingValue | MissingFlag | MultipleValuesDetected | MissingSubcommand | NoBuiltInMatch | UnclusteredFlag;
/**
 * @since 1.0.0
 * @category models
 */
export interface CommandMismatch extends ValidationError.Proto {
    readonly _tag: "CommandMismatch";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface CorrectedFlag extends ValidationError.Proto {
    readonly _tag: "CorrectedFlag";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface HelpRequested extends ValidationError.Proto {
    readonly _tag: "HelpRequested";
    readonly error: HelpDoc;
    readonly command: Command<unknown>;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface InvalidArgument extends ValidationError.Proto {
    readonly _tag: "InvalidArgument";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface InvalidValue extends ValidationError.Proto {
    readonly _tag: "InvalidValue";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface MissingFlag extends ValidationError.Proto {
    readonly _tag: "MissingFlag";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface MissingValue extends ValidationError.Proto {
    readonly _tag: "MissingValue";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface MissingSubcommand extends ValidationError.Proto {
    readonly _tag: "MissingSubcommand";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface MultipleValuesDetected extends ValidationError.Proto {
    readonly _tag: "MultipleValuesDetected";
    readonly error: HelpDoc;
    readonly values: ReadonlyArray<string>;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface NoBuiltInMatch extends ValidationError.Proto {
    readonly _tag: "NoBuiltInMatch";
    readonly error: HelpDoc;
}
/**
 * @since 1.0.0
 * @category models
 */
export interface UnclusteredFlag extends ValidationError.Proto {
    readonly _tag: "UnclusteredFlag";
    readonly error: HelpDoc;
    readonly unclustered: ReadonlyArray<string>;
    readonly rest: ReadonlyArray<string>;
}
/**
 * @since 1.0.0
 */
export declare namespace ValidationError {
    /**
     * @since 1.0.0
     * @category models
     */
    interface Proto {
        readonly [ValidationErrorTypeId]: ValidationErrorTypeId;
    }
}
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isValidationError: (u: unknown) => u is ValidationError;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isCommandMismatch: (self: ValidationError) => self is CommandMismatch;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isCorrectedFlag: (self: ValidationError) => self is CorrectedFlag;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isHelpRequested: (self: ValidationError) => self is HelpRequested;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isInvalidArgument: (self: ValidationError) => self is InvalidArgument;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isInvalidValue: (self: ValidationError) => self is InvalidValue;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isMultipleValuesDetected: (self: ValidationError) => self is MultipleValuesDetected;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isMissingFlag: (self: ValidationError) => self is MissingFlag;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isMissingValue: (self: ValidationError) => self is MissingValue;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isMissingSubcommand: (self: ValidationError) => self is MissingSubcommand;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isNoBuiltInMatch: (self: ValidationError) => self is NoBuiltInMatch;
/**
 * @since 1.0.0
 * @category refinements
 */
export declare const isUnclusteredFlag: (self: ValidationError) => self is UnclusteredFlag;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const commandMismatch: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const correctedFlag: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const helpRequested: <A>(command: Command<A>) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const invalidArgument: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const invalidValue: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const keyValuesDetected: (error: HelpDoc, keyValues: ReadonlyArray<string>) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const missingFlag: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const missingValue: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const missingSubcommand: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const noBuiltInMatch: (error: HelpDoc) => ValidationError;
/**
 * @since 1.0.0
 * @category constructors
 */
export declare const unclusteredFlag: (error: HelpDoc, unclustered: ReadonlyArray<string>, rest: ReadonlyArray<string>) => ValidationError;
//# sourceMappingURL=ValidationError.d.ts.map