import * as Inspectable from "effect/Inspectable";
const bigint1e9 = 1000000000n;
/** @internal */
export const nanosToHrTime = timestamp => {
  return [Number(timestamp / bigint1e9), Number(timestamp % bigint1e9)];
};
/** @internal */
export const recordToAttributes = value => Object.entries(value).reduce((acc, [key, value]) => {
  acc[key] = unknownToAttributeValue(value);
  return acc;
}, {});
/** @internal */
export const unknownToAttributeValue = value => {
  if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
    return value;
  } else if (typeof value === "bigint") {
    return Number(value);
  }
  return Inspectable.toStringUnknown(value);
};
/** @internal */
export const isNonEmpty = a => a !== undefined && !(Array.isArray(a) && a.length === 0);
//# sourceMappingURL=utils.js.map