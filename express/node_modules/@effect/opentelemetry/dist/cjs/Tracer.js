"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withSpanContext = exports.makeExternalSpan = exports.make = exports.layerWithoutOtelTracer = exports.layerTracer = exports.layerGlobalTracer = exports.layerGlobal = exports.layer = exports.currentOtelSpan = exports.OtelTracerProvider = exports.OtelTracer = exports.OtelTraceState = exports.OtelTraceFlags = void 0;
var internal = _interopRequireWildcard(require("./internal/tracer.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/**
 * @since 1.0.0
 * @category constructors
 */
const make = exports.make = internal.make;
/**
 * @since 1.0.0
 * @category constructors
 */
const makeExternalSpan = exports.makeExternalSpan = internal.makeExternalSpan;
/**
 * @since 1.0.0
 * @category accessors
 */
const currentOtelSpan = exports.currentOtelSpan = internal.currentOtelSpan;
/**
 * @since 1.0.0
 * @category layers
 */
const layerWithoutOtelTracer = exports.layerWithoutOtelTracer = internal.layerWithoutOtelTracer;
/**
 * @since 1.0.0
 * @category layers
 */
const layer = exports.layer = internal.layer;
/**
 * @since 1.0.0
 * @category layers
 */
const layerGlobal = exports.layerGlobal = internal.layerGlobal;
/**
 * @since 1.0.0
 * @category layers
 */
const layerTracer = exports.layerTracer = internal.layerTracer;
/**
 * @since 1.0.0
 * @category layers
 */
const layerGlobalTracer = exports.layerGlobalTracer = internal.layerGlobalTracer;
/**
 * @since 1.0.0
 * @category tags
 */
const OtelTracerProvider = exports.OtelTracerProvider = internal.TracerProvider;
/**
 * @since 1.0.0
 * @category tags
 */
const OtelTracer = exports.OtelTracer = internal.Tracer;
/**
 * @since 1.0.0
 * @category tags
 */
const OtelTraceFlags = exports.OtelTraceFlags = internal.traceFlagsTag;
/**
 * @since 1.0.0
 * @category tags
 */
const OtelTraceState = exports.OtelTraceState = internal.traceStateTag;
/**
 * Set the effect's parent span from the given opentelemetry `SpanContext`.
 *
 * This is handy when you set up OpenTelemetry outside of Effect and want to
 * attach to a parent span.
 *
 * @since 1.0.0
 * @category propagation
 */
const withSpanContext = exports.withSpanContext = internal.withSpanContext;
//# sourceMappingURL=Tracer.js.map