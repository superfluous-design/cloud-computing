/**
 * @since 1.0.0
 */
import type * as Headers from "@effect/platform/Headers";
import type * as HttpClient from "@effect/platform/HttpClient";
import type * as Duration from "effect/Duration";
import * as Layer from "effect/Layer";
import type * as Logger from "effect/Logger";
import type * as Tracer from "effect/Tracer";
/**
 * @since 1.0.0
 * @category Layers
 */
export declare const layer: (options: {
    readonly baseUrl: string;
    readonly resource: {
        readonly serviceName: string;
        readonly serviceVersion?: string | undefined;
        readonly attributes?: Record<string, unknown>;
    };
    readonly headers?: Headers.Input | undefined;
    readonly maxBatchSize?: number | undefined;
    readonly replaceLogger?: Logger.Logger<any, any> | undefined;
    readonly tracerContext?: (<X>(f: () => X, span: Tracer.AnySpan) => X) | undefined;
    readonly loggerExportInterval?: Duration.DurationInput | undefined;
    readonly metricsExportInterval?: Duration.DurationInput | undefined;
    readonly tracerExportInterval?: Duration.DurationInput | undefined;
    readonly shutdownTimeout?: Duration.DurationInput | undefined;
}) => Layer.Layer<never, never, HttpClient.HttpClient>;
//# sourceMappingURL=Otlp.d.ts.map