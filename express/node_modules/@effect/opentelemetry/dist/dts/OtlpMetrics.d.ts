/**
 * @since 1.0.0
 */
import type * as Headers from "@effect/platform/Headers";
import type * as HttpClient from "@effect/platform/HttpClient";
import * as Duration from "effect/Duration";
import * as Effect from "effect/Effect";
import * as Layer from "effect/Layer";
import type * as Scope from "effect/Scope";
/**
 * @since 1.0.0
 * @category Constructors
 */
export declare const make: (options: {
    readonly url: string;
    readonly resource: {
        readonly serviceName: string;
        readonly serviceVersion?: string | undefined;
        readonly attributes?: Record<string, unknown>;
    };
    readonly headers?: Headers.Input | undefined;
    readonly exportInterval?: Duration.DurationInput | undefined;
    readonly shutdownTimeout?: Duration.DurationInput | undefined;
}) => Effect.Effect<void, never, HttpClient.HttpClient | Scope.Scope>;
/**
 * @since 1.0.0
 * @category Layers
 */
export declare const layer: (options: {
    readonly url: string;
    readonly resource: {
        readonly serviceName: string;
        readonly serviceVersion?: string | undefined;
        readonly attributes?: Record<string, unknown>;
    };
    readonly headers?: Headers.Input | undefined;
    readonly exportInterval?: Duration.DurationInput | undefined;
    readonly shutdownTimeout?: Duration.DurationInput | undefined;
}) => Layer.Layer<never, never, HttpClient.HttpClient>;
//# sourceMappingURL=OtlpMetrics.d.ts.map