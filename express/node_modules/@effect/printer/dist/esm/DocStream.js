/**
 * @since 1.0.0
 */
import * as internal from "./internal/docStream.js";
// -----------------------------------------------------------------------------
// Models
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category symbol
 */
export const DocStreamTypeId = internal.DocStreamTypeId;
// -----------------------------------------------------------------------------
// Refinements
// -----------------------------------------------------------------------------
/**
 * Returns `true` if the specified value is a `DocStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isDocStream = internal.isDocStream;
/**
 * Returns `true` if the specified `DocStream` is a `FailedStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isFailedStream = internal.isFailedStream;
/**
 * Returns `true` if the specified `DocStream` is a `EmptyStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isEmptyStream = internal.isEmptyStream;
/**
 * Returns `true` if the specified `DocStream` is a `CharStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isCharStream = internal.isCharStream;
/**
 * Returns `true` if the specified `DocStream` is a `TextStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isTextStream = internal.isTextStream;
/**
 * Returns `true` if the specified `DocStream` is a `LineStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isLineStream = internal.isLineStream;
/**
 * Returns `true` if the specified `DocStream` is a `PushAnnotationStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isPushAnnotationStream = internal.isPushAnnotationStream;
/**
 * Returns `true` if the specified `DocStream` is a `PopAnnotationStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isPopAnnotationStream = internal.isPopAnnotationStream;
// -----------------------------------------------------------------------------
// Constructors
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category constructors
 */
export const failed = internal.failed;
/**
 * @since 1.0.0
 * @category constructors
 */
export const empty = internal.empty;
/**
 * @since 1.0.0
 * @category constructors
 */
export const char = internal.char;
/**
 * @since 1.0.0
 * @category constructors
 */
export const text = internal.text;
/**
 * @since 1.0.0
 * @category constructors
 */
export const line = internal.line;
/**
 * @since 1.0.0
 * @category constructors
 */
export const pushAnnotation = internal.pushAnnotation;
/**
 * @since 1.0.0
 * @category constructors
 */
export const popAnnotation = internal.popAnnotation;
// -----------------------------------------------------------------------------
// Annotations
// -----------------------------------------------------------------------------
/**
 * Changes the annotation of a document to a different annotation, or to
 * none at all.
 *
 * @since 1.0.0
 * @category annotations
 */
export const alterAnnotations = internal.alterAnnotations;
/**
 * Modify the annotations of a document.
 *
 * @since 1.0.0
 * @category annotations
 */
export const reAnnotate = internal.reAnnotate;
/**
 * Remove all annotations from a document.
 *
 * @since 1.0.0
 * @category annotations
 */
export const unAnnotate = internal.unAnnotate;
// -----------------------------------------------------------------------------
// Annotations
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category folding
 */
export const foldMap = internal.foldMap;
/**
 * @since 1.0.0
 * @category folding
 */
export const match = internal.match;
/**
 * @since 1.0.0
 * @category mapping
 */
export const map = internal.map;
/**
 * @since 1.0.0
 * @category instances
 */
export const Functor = internal.Covariant;
/**
 * @since 1.0.0
 * @category instances
 */
export const Invariant = internal.Invariant;
//# sourceMappingURL=DocStream.js.map