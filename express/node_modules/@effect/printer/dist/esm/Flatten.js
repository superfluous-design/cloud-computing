/**
 * @since 1.0.0
 */
import * as internal from "./internal/flatten.js";
/**
 * @since 1.0.0
 * @category symbol
 */
export const FlattenTypeId = internal.FlattenTypeId;
// -----------------------------------------------------------------------------
// Refinements
// -----------------------------------------------------------------------------
/**
 * Returns `true` if the specified value is a `Flatten`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isFlatten = internal.isFlatten;
/**
 * Returns `true` if the specified `Flatten` is a `Flattened`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isFlattened = internal.isFlattened;
/**
 * Returns `true` if the specified `Flatten` is an `AlreadyFlat`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isAlreadyFlat = internal.isAlreadyFlat;
/**
 * Returns `true` if the specified `Flatten` is a `NeverFlat`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
export const isNeverFlat = internal.isNeverFlat;
// -----------------------------------------------------------------------------
// Constructors
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category constructors
 */
export const flattened = internal.flattened;
/**
 * @since 1.0.0
 * @category constructors
 */
export const alreadyFlat = internal.alreadyFlat;
/**
 * @since 1.0.0
 * @category constructors
 */
export const neverFlat = internal.neverFlat;
// -----------------------------------------------------------------------------
// Combinators
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category mapping
 */
export const map = internal.map;
//# sourceMappingURL=Flatten.js.map