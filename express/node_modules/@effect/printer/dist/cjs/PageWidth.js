"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unbounded = exports.remainingWidth = exports.isUnbounded = exports.isPageWidth = exports.isAvailablePerLine = exports.defaultPageWidth = exports.availablePerLine = exports.PageWidthTypeId = void 0;
var internal = _interopRequireWildcard(require("./internal/pageWidth.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/**
 * @since 1.0.0
 */

// -----------------------------------------------------------------------------
// Models
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category symbol
 */
const PageWidthTypeId = exports.PageWidthTypeId = internal.PageWidthTypeId;
// -----------------------------------------------------------------------------
// Refinements
// -----------------------------------------------------------------------------
/**
 * Returns `true` if the specified value is a `PageWidth`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isPageWidth = exports.isPageWidth = internal.isPageWidth;
/**
 * Returns `true` if the specified `PageWidth` is an `AvailablePerLine`, `false`
 * otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isAvailablePerLine = exports.isAvailablePerLine = internal.isAvailablePerLine;
/**
 * Returns `true` if the specified `PageWidth` is an `Unbounded`, `false`
 * otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isUnbounded = exports.isUnbounded = internal.isUnbounded;
// -----------------------------------------------------------------------------
// Constructors
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category constructors
 */
const availablePerLine = exports.availablePerLine = internal.availablePerLine;
/**
 * @since 1.0.0
 * @category constructors
 */
const unbounded = exports.unbounded = internal.unbounded;
/**
 * @since 1.0.0
 * @category constructors
 */
const defaultPageWidth = exports.defaultPageWidth = internal.defaultPageWidth;
// -----------------------------------------------------------------------------
// Utilities
// -----------------------------------------------------------------------------
/**
 * Calculates the remaining width on the current line.
 *
 * @since 1.0.0
 * @category utilities
 */
const remainingWidth = exports.remainingWidth = internal.remainingWidth;
//# sourceMappingURL=PageWidth.js.map