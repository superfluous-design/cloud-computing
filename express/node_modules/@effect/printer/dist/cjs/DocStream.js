"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unAnnotate = exports.text = exports.reAnnotate = exports.pushAnnotation = exports.popAnnotation = exports.match = exports.map = exports.line = exports.isTextStream = exports.isPushAnnotationStream = exports.isPopAnnotationStream = exports.isLineStream = exports.isFailedStream = exports.isEmptyStream = exports.isDocStream = exports.isCharStream = exports.foldMap = exports.failed = exports.empty = exports.char = exports.alterAnnotations = exports.Invariant = exports.Functor = exports.DocStreamTypeId = void 0;
var internal = _interopRequireWildcard(require("./internal/docStream.js"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
/**
 * @since 1.0.0
 */

// -----------------------------------------------------------------------------
// Models
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category symbol
 */
const DocStreamTypeId = exports.DocStreamTypeId = internal.DocStreamTypeId;
// -----------------------------------------------------------------------------
// Refinements
// -----------------------------------------------------------------------------
/**
 * Returns `true` if the specified value is a `DocStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isDocStream = exports.isDocStream = internal.isDocStream;
/**
 * Returns `true` if the specified `DocStream` is a `FailedStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isFailedStream = exports.isFailedStream = internal.isFailedStream;
/**
 * Returns `true` if the specified `DocStream` is a `EmptyStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isEmptyStream = exports.isEmptyStream = internal.isEmptyStream;
/**
 * Returns `true` if the specified `DocStream` is a `CharStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isCharStream = exports.isCharStream = internal.isCharStream;
/**
 * Returns `true` if the specified `DocStream` is a `TextStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isTextStream = exports.isTextStream = internal.isTextStream;
/**
 * Returns `true` if the specified `DocStream` is a `LineStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isLineStream = exports.isLineStream = internal.isLineStream;
/**
 * Returns `true` if the specified `DocStream` is a `PushAnnotationStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isPushAnnotationStream = exports.isPushAnnotationStream = internal.isPushAnnotationStream;
/**
 * Returns `true` if the specified `DocStream` is a `PopAnnotationStream`, `false` otherwise.
 *
 * @since 1.0.0
 * @category refinements
 */
const isPopAnnotationStream = exports.isPopAnnotationStream = internal.isPopAnnotationStream;
// -----------------------------------------------------------------------------
// Constructors
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category constructors
 */
const failed = exports.failed = internal.failed;
/**
 * @since 1.0.0
 * @category constructors
 */
const empty = exports.empty = internal.empty;
/**
 * @since 1.0.0
 * @category constructors
 */
const char = exports.char = internal.char;
/**
 * @since 1.0.0
 * @category constructors
 */
const text = exports.text = internal.text;
/**
 * @since 1.0.0
 * @category constructors
 */
const line = exports.line = internal.line;
/**
 * @since 1.0.0
 * @category constructors
 */
const pushAnnotation = exports.pushAnnotation = internal.pushAnnotation;
/**
 * @since 1.0.0
 * @category constructors
 */
const popAnnotation = exports.popAnnotation = internal.popAnnotation;
// -----------------------------------------------------------------------------
// Annotations
// -----------------------------------------------------------------------------
/**
 * Changes the annotation of a document to a different annotation, or to
 * none at all.
 *
 * @since 1.0.0
 * @category annotations
 */
const alterAnnotations = exports.alterAnnotations = internal.alterAnnotations;
/**
 * Modify the annotations of a document.
 *
 * @since 1.0.0
 * @category annotations
 */
const reAnnotate = exports.reAnnotate = internal.reAnnotate;
/**
 * Remove all annotations from a document.
 *
 * @since 1.0.0
 * @category annotations
 */
const unAnnotate = exports.unAnnotate = internal.unAnnotate;
// -----------------------------------------------------------------------------
// Annotations
// -----------------------------------------------------------------------------
/**
 * @since 1.0.0
 * @category folding
 */
const foldMap = exports.foldMap = internal.foldMap;
/**
 * @since 1.0.0
 * @category folding
 */
const match = exports.match = internal.match;
/**
 * @since 1.0.0
 * @category mapping
 */
const map = exports.map = internal.map;
/**
 * @since 1.0.0
 * @category instances
 */
const Functor = exports.Functor = internal.Covariant;
/**
 * @since 1.0.0
 * @category instances
 */
const Invariant = exports.Invariant = internal.Invariant;
//# sourceMappingURL=DocStream.js.map