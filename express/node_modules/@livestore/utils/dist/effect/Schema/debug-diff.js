import { Schema, SchemaAST } from 'effect';
/**
 * Diffs two values for a given schema and traverses downwards and returns a list of differences.
 */
export const debugDiff = (base) => (a, b) => {
    const bag = [];
    debugDiffImpl(base.ast, a, b, '', bag);
    return bag;
};
const debugDiffImpl = (ast, a, b, path, bag) => {
    const eq = Schema.equivalence({ ast });
    if (eq(a, b) === false) {
        // bag.push({ path, a, b, ast })
        if (SchemaAST.isUnion(ast)) {
            if (isTaggedUnion(ast)) {
                bag.push({ path, a, b, ast });
                return;
            }
            else {
                for (const type of ast.types) {
                    try {
                        debugDiffImpl(type, a, b, path, bag);
                        return;
                    }
                    catch { }
                }
            }
        }
        else if (SchemaAST.isTypeLiteral(ast)) {
            const props = SchemaAST.getPropertySignatures(ast);
            for (const prop of props) {
                debugDiffImpl(prop.type, a[prop.name], b[prop.name], `${path}.${prop.name.toString()}`, bag);
            }
        }
        else {
            // debugger
            bag.push({ path, a, b, ast });
        }
    }
};
const isTaggedUnion = (ast) => {
    if (SchemaAST.isUnion(ast)) {
        return ast.types.every((type) => {
            if (SchemaAST.isTypeLiteral(type) === false)
                return false;
            const props = SchemaAST.getPropertySignatures(type);
            return props.some((prop) => prop.name.toString() === '_tag');
        });
    }
};
//# sourceMappingURL=debug-diff.js.map