export const makeNoopSpan = () => {
    const performanceStartTime = performance.now();
    const span = {
        _performanceStartTime: performanceStartTime,
        setAttribute: () => null,
        setAttributes: () => null,
        addEvent: () => null,
        setStatus: () => null,
        updateName: () => null,
        recordException: () => null,
        end: () => {
            const endTime = performance.now();
            const duration = endTime - performanceStartTime;
            const durationSecs = duration / 1000;
            const durationRestNs = (duration % 1000) * 1_000_000;
            span._duration = [durationSecs, durationRestNs];
        },
        spanContext: () => {
            return { traceId: 'livestore-noop-trace-id', spanId: 'livestore-noop-span-id' };
        },
        _duration: [0, 0],
    };
    return span;
};
export const makeNoopTracer = () => {
    return new NoopTracer();
};
export class NoopTracer {
    startSpan = () => makeNoopSpan();
    startActiveSpan(name, arg2, arg3, arg4) {
        let _opts;
        let _ctx;
        let fn;
        if (arguments.length < 2) {
            return;
        }
        else if (arguments.length === 2) {
            fn = arg2;
        }
        else if (arguments.length === 3) {
            _opts = arg2;
            fn = arg3;
        }
        else {
            _opts = arg2;
            _ctx = arg3;
            fn = arg4;
        }
        return fn(makeNoopSpan());
    }
}
//# sourceMappingURL=NoopTracer.js.map