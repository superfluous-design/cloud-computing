import { Duration, Effect } from '@livestore/utils/effect';
/**
 * A set of values that expire after a given timeout
 * The timeout cleanup is performed in a batched way to avoid excessive setTimeout calls
 */
export declare class TimeoutSet<V> {
    private values;
    private timeoutHandle;
    private readonly timeoutMs;
    private constructor();
    static make: (timeout: Duration.DurationInput) => Effect.Effect<TimeoutSet<unknown>, never, import("effect/Scope").Scope>;
    add(value: V): void;
    has(value: V): boolean;
    delete(value: V): void;
    private scheduleCleanup;
    private cleanup;
    onShutdown: () => void;
}
//# sourceMappingURL=utils.d.ts.map