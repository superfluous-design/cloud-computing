import { makeNoopTracer } from '@livestore/utils';
import { Effect, identity, Layer, OtelTracer } from '@livestore/utils/effect';
import * as otel from '@opentelemetry/api';
export const provideOtel = ({ otelTracer, parentSpanContext }) => (effect) => {
    const OtelTracerLive = Layer.succeed(OtelTracer.OtelTracer, otelTracer ?? makeNoopTracer());
    const TracingLive = Layer.unwrapEffect(Effect.map(OtelTracer.make, Layer.setTracer)).pipe(Layer.provideMerge(OtelTracerLive));
    return effect.pipe(parentSpanContext
        ? Effect.withParentSpan(OtelTracer.makeExternalSpan(otel.trace.getSpanContext(parentSpanContext)))
        : identity, Effect.provide(TracingLive));
};
export const getDurationMsFromSpan = (span) => {
    const durationHr = span._duration;
    return durationHr[0] * 1000 + durationHr[1] / 1_000_000;
};
export const getStartTimeHighResFromSpan = (span) => span._performanceStartTime;
//# sourceMappingURL=otel.js.map