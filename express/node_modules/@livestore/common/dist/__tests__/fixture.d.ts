import { SessionIdSymbol } from '../adapter-types.js';
import { State } from '../schema/mod.js';
export declare const UiState: State.SQLite.ClientDocumentTableDef<"UiState", {
    readonly showSidebar: boolean;
}, {
    readonly showSidebar: boolean;
}, {
    partialSet: true;
    default: {
        id: undefined;
        value: {
            readonly showSidebar: true;
        };
    };
}>;
export declare const appConfig: State.SQLite.ClientDocumentTableDef<"AppConfig", {
    readonly fontSize: number;
    readonly theme: "light" | "dark";
}, {
    readonly fontSize: number;
    readonly theme: "light" | "dark";
}, {
    partialSet: true;
    default: {
        id: "static";
        value: {
            readonly fontSize: 13;
            readonly theme: "light";
        };
    };
}>;
export declare const appConfig2: State.SQLite.ClientDocumentTableDef<"AppConfig", {
    readonly fontSize: number;
    readonly theme: "light" | "dark";
}, {
    readonly fontSize: number;
    readonly theme: "light" | "dark";
}, {
    partialSet: true;
    default: {
        id: typeof SessionIdSymbol;
        value: {
            readonly fontSize: 13;
            readonly theme: "light";
        };
    };
}>;
export declare const tables: {
    UiState: State.SQLite.ClientDocumentTableDef<"UiState", {
        readonly showSidebar: boolean;
    }, {
        readonly showSidebar: boolean;
    }, {
        partialSet: true;
        default: {
            id: undefined;
            value: {
                readonly showSidebar: true;
            };
        };
    }>;
    appConfig: State.SQLite.ClientDocumentTableDef<"AppConfig", {
        readonly fontSize: number;
        readonly theme: "light" | "dark";
    }, {
        readonly fontSize: number;
        readonly theme: "light" | "dark";
    }, {
        partialSet: true;
        default: {
            id: "static";
            value: {
                readonly fontSize: 13;
                readonly theme: "light";
            };
        };
    }>;
};
export declare const schema: import("../schema/schema.js").FromInputSchema.DeriveSchema<{
    state: import("../schema/schema.js").InternalState;
    events: {
        uiStateSet: State.SQLite.ClientDocumentTableDef.SetEventDefLike<"UiState", {
            readonly showSidebar: boolean;
        }, {
            partialSet: true;
            default: {
                id: undefined;
                value: {
                    readonly showSidebar: true;
                };
            };
        }>;
        appConfigSet: State.SQLite.ClientDocumentTableDef.SetEventDefLike<"AppConfig", {
            readonly fontSize: number;
            readonly theme: "light" | "dark";
        }, {
            partialSet: true;
            default: {
                id: "static";
                value: {
                    readonly fontSize: 13;
                    readonly theme: "light";
                };
            };
        }>;
    };
}>;
//# sourceMappingURL=fixture.d.ts.map