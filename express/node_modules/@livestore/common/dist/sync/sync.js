import { Schema } from '@livestore/utils/effect';
import * as EventSequenceNumber from '../schema/EventSequenceNumber.js';
export class IsOfflineError extends Schema.TaggedError()('IsOfflineError', {}) {
}
export class InvalidPushError extends Schema.TaggedError()('InvalidPushError', {
    reason: Schema.Union(Schema.TaggedStruct('Unexpected', {
        message: Schema.String,
    }), Schema.TaggedStruct('ServerAhead', {
        minimumExpectedNum: Schema.Number,
        providedNum: Schema.Number,
    })),
}) {
}
export class InvalidPullError extends Schema.TaggedError()('InvalidPullError', {
    message: Schema.String,
}) {
}
export class LeaderAheadError extends Schema.TaggedError()('LeaderAheadError', {
    minimumExpectedNum: EventSequenceNumber.EventSequenceNumber,
    providedNum: EventSequenceNumber.EventSequenceNumber,
    /** Generation number the client session should use for subsequent pushes */
    // nextGeneration: Schema.Number,
}) {
}
//# sourceMappingURL=sync.js.map