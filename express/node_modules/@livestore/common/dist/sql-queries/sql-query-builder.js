import * as SqlQueries from './sql-queries.js';
export const makeSqlQueryBuilder = (schema) => {
    const findManyRows = ({ tableName, where, limit, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.findManyRows({ columns, tableName, where, limit });
        return [stmt, bindValues, tableName];
    };
    const countRows = ({ tableName, where, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.countRows({ columns, tableName, where });
        return [stmt, bindValues, tableName];
    };
    const insertRow = ({ tableName, values, options = { orReplace: false }, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.insertRow({ columns, tableName, values, options });
        return [stmt, bindValues, tableName];
    };
    const insertRows = ({ tableName, valuesArray, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.insertRows({ columns, tableName, valuesArray });
        return [stmt, bindValues, tableName];
    };
    const insertOrIgnoreRow = ({ tableName, values, returnRow = false, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.insertOrIgnoreRow({ columns, tableName, values, returnRow });
        return [stmt, bindValues, tableName];
    };
    const updateRows = ({ tableName, updateValues, where, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.updateRows({ columns, tableName, updateValues, where });
        return [stmt, bindValues, tableName];
    };
    const deleteRows = ({ tableName, where, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.deleteRows({ columns, tableName, where });
        return [stmt, bindValues, tableName];
    };
    const upsertRow = ({ tableName, createValues, updateValues, where, }) => {
        const columns = schema[tableName].columns;
        const [stmt, bindValues] = SqlQueries.upsertRow({
            columns,
            tableName,
            createValues: createValues, // TODO investigate why types don't match
            updateValues,
            where,
        });
        return [stmt, bindValues, tableName];
    };
    return {
        findManyRows,
        countRows,
        insertRow,
        insertRows,
        insertOrIgnoreRow,
        updateRows,
        deleteRows,
        upsertRow,
    };
};
//# sourceMappingURL=sql-query-builder.js.map