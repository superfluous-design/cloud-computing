import type { MigrationOptions } from '../../../adapter-types.js';
import { type Materializer } from '../../EventDef.js';
import type { InternalState } from '../../schema.js';
import { type TableDefBase } from './table-def.js';
export * from './table-def.js';
export { ClientDocumentTableDefSymbol, tableIsClientDocumentTable, clientDocument, type ClientDocumentTableDef, type ClientDocumentTableOptions, } from './client-document-def.js';
export * from '../../EventDef.js';
export declare const makeState: <TStateInput extends InputState>(inputSchema: TStateInput) => InternalState;
export type InputState = {
    readonly tables: Record<string, TableDefBase> | ReadonlyArray<TableDefBase>;
    readonly materializers: Record<string, Materializer<any>>;
    /**
     * @default { strategy: 'auto' }
     */
    readonly migrations?: MigrationOptions;
};
//# sourceMappingURL=mod.d.ts.map