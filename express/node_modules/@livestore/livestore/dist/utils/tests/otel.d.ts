import type { Attributes } from '@opentelemetry/api';
import type { InMemorySpanExporter, ReadableSpan } from '@opentelemetry/sdk-trace-base';
type SimplifiedNestedSpan = {
    _name: string;
    attributes: any;
    children: SimplifiedNestedSpan[];
};
export declare const getSimplifiedRootSpan: (exporter: InMemorySpanExporter, mapAttributes?: (attributes: Attributes) => Attributes) => SimplifiedNestedSpan;
export declare const toTraceFile: (spans: ReadableSpan[]) => {
    batches: {
        resource: {
            attributes: {
                key: string;
                value: {
                    stringValue: string;
                };
            }[];
            droppedAttributesCount: number;
        };
        instrumentationLibrarySpans: {
            spans: {
                name: string;
                kind: string;
                startTimeUnixNano: string;
                endTimeUnixNano: string;
                attributes: {
                    key: string;
                    value: {
                        stringValue: string;
                        intValue?: undefined;
                        doubleValue?: undefined;
                        boolValue?: undefined;
                    } | {
                        intValue: number;
                        stringValue?: undefined;
                        doubleValue?: undefined;
                        boolValue?: undefined;
                    } | {
                        doubleValue: number;
                        stringValue?: undefined;
                        intValue?: undefined;
                        boolValue?: undefined;
                    } | {
                        boolValue: boolean;
                        stringValue?: undefined;
                        intValue?: undefined;
                        doubleValue?: undefined;
                    };
                }[];
                droppedAttributesCount: number;
                droppedEventsCount: number;
                droppedLinksCount: number;
                status: {
                    code: import("@opentelemetry/api").SpanStatusCode;
                    message: string;
                };
                parentSpanId?: string | undefined;
                traceId: string;
                spanId: string;
            }[];
            instrumentationLibrary: {
                name: string;
                version: string;
            };
        }[];
    }[];
};
export {};
//# sourceMappingURL=otel.d.ts.map